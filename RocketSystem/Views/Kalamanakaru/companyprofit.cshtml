@{
    Layout = "~/Views/Shared/AdminPanel.cshtml";
    var customerbonusprofit = ViewBag.customerbonus;
    var l = 0;
}

<head>
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/modules/export-data.js"></script>
    @*<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">*@
    <style>
        @@media all and (max-width: 400px) and (min-width: 300px) {
            g.highcharts-series.highcharts-series-4.highcharts-pie-series.highcharts-tracker {
                display: none;
            }
        }

        text.highcharts-credits {
            display: none;
        }
    </style>
</head>

<!-- Data Table area Start-->
<div class="data-table-area">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="data-table-list">
                    <div class="basic-tb-hd">
                        <h1>Income Statistics Per Person</h1>
                        <!-- <p>It's just that simple. Turn your simple table into a sophisticated data table and offer your users a nice experience and great features without any effort.</p> -->
                    </div>
                    <!-- start data table -->
                    <div class="table-responsive">
                        <table id="data-table-basic" class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Memberid</th>
                                    <th>Bonus</th>
                                    <th>Income</th>
                                    <th>Profit</th>
                                    <th>Profit Precentage</th>
                                    <th>Lost or no</th>
                                    <th>Show graphwise</th>

                                </tr>
                            </thead>
                            @{
                                var allbonus = 0.0;
                                var allincome = 0.0;
                                var allprofit = 0.0;
                                foreach (var a in customerbonusprofit)
                                {
                                    var memberid = @a.memberId + "#" + @a.paidIntoduceBonus + "#" + a.paidpositionBonus + "#" + a.paidPresentageBonus + "#" + a.paidThirdStageBonus + "#";

                                    <tbody>
                                        <tr id="model">
                                            <td class="ssss">@a.memberId</td>
                                            <td>@a.paidIntoduceBonus</td>
                                            <td>@a.paidpositionBonus</td>
                                            <td>@a.paidPresentageBonus</td>
                                            <td>@a.paidThirdStageBonus %</td>
                                            @if (a.paidPresentageBonus < 0)
                                            {
                                                <td align="center"> Lost </td>
                                            }
                                            @if (a.paidPresentageBonus > 0)
                                            {
                                                <td align="center"> Profit </td>
                                            }
                                            <td align="center">
                                                <button onclick="document.getElementById('id01').style.display='block'" value=@memberid ; style="width:auto;" type="button" class="btn btn-success btn-lg">show</button>
                                            </td>

                                        </tr>

                                    </tbody>
                                    allbonus = allbonus + a.paidIntoduceBonus;
                                    allincome = allincome + a.paidpositionBonus;
                                    allprofit = allprofit + a.paidPresentageBonus;
                                }
                            }
                        </table>

                    </div>
                    <!-- end data table -->
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Data Table area End--><br><br><!-- Breadcomb area Start--><div class="breadcomb-area">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="breadcomb-list">
                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                            <div class="breadcomb-wp">
                                <div class="breadcomb-icon">
                                    <i class="notika-icon notika-app"></i>
                                </div>
                                <div class="breadcomb-ctn">
                                    <h1>All Bonus</h1>
                                    <!--  <p>Monthly <span class="bread-ntd">/Year</span></p> -->
                                    <!-- <button type="button" class="btn btn-dark">Monthly</button>
                                    <button type="button" class="btn btn-secondarys">Year</button> -->
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>

    @*Chart Area Start*@
    <br />
    <center>
        <div class="container">
            <div class="row" style="background-color:#f2f2f2; padding:20px 5px;">
                <div class="col-md-6">
                    <div id="container1" style="min-width: 300px; height: 400px; max-width: 600px; margin: 0 auto"></div>
                </div>
                <div class="col-md-6">
                    <div id="container2" style="min-width: 300px; height: 400px; max-width: 600px; margin: 0 auto"></div>
                </div>
            </div>
            @*<div class="w-100"></div>*@
            <div class="row" style="background-color:#f2f2f2; padding:20px 5px;">
                <div class="col-md-6">
                    <div id="container3" style="min-width: 300px; height: 400px; max-width: 600px; margin: 0 auto"></div>
                </div>
                <div class="col-md-6">
                    <div id="container4" style="min-width: 300px; height: 400px; max-width: 600px; margin: 0 auto"></div>
                </div>
            </div>

        </div>
    </center>

    @*Chart Area End*@




    <div class="container">
        <div class="row my-3">

        </div>
        <div class="row py-2">

        </div>
    </div>
    @*<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>*@
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js" type="text/javascript"></script>
    <script src="https://code.jquery.com/jquery-2.1.1.min.js" type="text/javascript"></script>
    <script>



    </script>
    <script>

        setData();
        var y2 = "nuwan";
        var member = "Member Bonus and Profit";
        var member1 = "Member Bonus, Profit And Income";
        var income = 2000;
        var bonus = 2000;
        var profit = 20000;
        var interval = 5000;

        function setData() {
            income = 100;
            bonus = 100;
            profit = 100;

            member = "Member Bonus and Profit";
            member1 = "Member Bonus, Profit And Income";

        }
        refresh();
        refresh1();
        refresh3();

        $("button").click(function news() {
            var fired_button = $(this).val();

            var result = fired_button.split('#');
            var y = result[1];
            bonus = parseInt(y, 10);
            var y1 = result[3];
            profit = parseInt(y1, 10);
            y2 = result[0];
            y3 = result[2];
            income = parseInt(y3, 10);

            member = y2 + " " + "Member Bonus and Profit";

            member1 = y2 + " " + "Member Bonus, Profit And Income";

            member1 = y2 + " " + "Member Bonus, Profit And Income";

            $("#fifteenlevel").val(result[0]);
            $("#positionbonus").val(result[4]);
            $("#presentagebonus").val(result[1]);
            $("#sharebonus").val(result[5]);
            $("#thirdrocket").val(result[2]);
            $("#fifthrocket").val(result[3]);
            $("#id").val(result[6]);

            refresh();
            refresh1();
            refresh3();
        });


        // Radialize the colors
        Highcharts.setOptions({

            colors: Highcharts.map(Highcharts.getOptions().colors, function (color) {
                return {
                    radialGradient: {
                        cx: 0.5,
                        cy: 0.3,
                        r: 0.7
                    },
                    stops: [
                        [0, color],
                        [1, Highcharts.Color(color).brighten(-0.3).get('rgb')] // darken
                    ]
                };
            })
        });

        function refresh() {

        Highcharts.chart('container1', {

            chart: {
                plotBackgroundColor: null,
                plotBorderWidth: null,
                plotShadow: false,
                type: 'pie'
            },
            title: {
                text: member
            },
            tooltip: {
                pointFormat: '{series.name}: <b>{point.percentage: .1f}%</b>'
            },
            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    cursor: 'pointer',
                    dataLabels: {
                        enabled: true,
                        format: '<b>{point.name}</b>: {point.percentage: .1f} %',
                        connectorColor: 'silver'
                    }
                }
            },


            series: [{
                name: 'Share',
                data: [
                    { name: 'Bonus', y: bonus },
                    { name: 'Profit', y: profit },

                ]
            }]
           });
            $("#container1").load('companyprofit.cshtml')
        };

        //Second Chart
        function refresh1() {
            Highcharts.chart('container2', {

                chart: {
                    type: 'column'
                },

                title: {
                    text: member1
                },

                xAxis: {
                    categories: ['Income', 'Bonus', 'Profit']
                },

                yAxis: {
                    allowDecimals: false,
                    min: 0,
                    title: {
                        text: 'Number of fruits'
                    }
                },

                tooltip: {
                    formatter: function () {
                        return '<b>' + this.x + '</b><br />' +
                            this.series.name + ': ' + this.y + '<br />' +
                            'Total: ' + this.point.stackTotal;
                    }
                },

                plotOptions: {
                    column: {
                        stacking: 'normal'
                    }
                },

                series: [{
                    name: 'Compare Bonus Memberwise',
                    data: [income, bonus, profit ],
                    stack: 'male'
                }]
            });
        };
        //Third Chart
        function refresh3() {
            Highcharts.chart('container3', {
                title: {
                    text: member1
                },
                xAxis: {
                    categories: ['Income', 'Bonus', 'Profit']
                },
                labels: {
                    items: [{
                        html: '',
                        style: {
                            left: '50px',
                            top: '18px',
                            color: ( // theme
                                Highcharts.defaultOptions.title.style &&
                                Highcharts.defaultOptions.title.style.color
                            ) || 'black'
                        }
                    }]
                },
                series: [{
                    type: 'column',
                    name: 'Bonuses and Income',
                    data: [income, bonus, profit]
                }, {
                    type: 'spline',
                    name: 'How To change Bonus',
                    data: [income, bonus, profit],
                    marker: {
                        lineWidth: 2,
                        lineColor: Highcharts.getOptions().colors[3],
                        fillColor: 'white'
                    }
                }]
            });
        }
        //4th Chart
        //Create the chart
        Highcharts.chart('container4', {
            chart: {
                type: 'column'
            },
            title: {
                text: 'Total Income, Total Profit and Total Bonus This Month'
            },
            subtitle: {
                text: ''
            },
            xAxis: {
                type: 'category'
            },
            yAxis: {
                title: {
                    text: 'Total Paid Bonus (Amount)'
                }

            },
            legend: {
                enabled: false
            },
            plotOptions: {
                series: {
                    borderWidth: 0,
                    dataLabels: {
                        enabled: true,
                        format: '{point.y: .1f}%'
                    }
                }
            },

            tooltip: {
                headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                pointFormat: '<span style="color:{point.color}">{point.name}</span>: <b>{point.y: .2f}%</b> of total<br />'
            },

            series: [
                {
                    name: "Paid Bonus All",
                    colorByPoint: true,
                    data: [
                        {
                            name: "All Bonus",
                            y: @allbonus,
                            drilldown: "Chrome"
                        },
                        {
                            name: "All Income",
                            y: @allincome,
                            drilldown: "Firefox"
                        },
                        {
                            name: "All Profit",
                            y: @allprofit,
                            drilldown: "Internet Explorer"
                        }

                    ]
                }
            ],


        });

    </script>
